plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.akjaw.timicompose"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.compose
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation project(":core")
    implementation project(":features:stopwatch")
    implementation project(":features:task:list")
    implementation project(':features:task:task_api')
    implementation project(':features:settings')

    implementation androidxDependencies.appCompat
    implementation androidxDependencies.lifecycleRuntimeKtx
    implementation composeDependencies.ui
    implementation composeDependencies.material
    implementation composeDependencies.navigation
    implementation composeDependencies.activity

    implementation hiltDependencies.android
    kapt hiltDependencies.compiler

    testImplementation testingDependencies.jupiterApi
    testRuntimeOnly testingDependencies.jupiterRuntimeEngine

    androidTestImplementation androidTestingDependencies.composeJunit
    androidTestImplementation androidTestingDependencies.espressoCore
}

kotlin {
    sourceSets.all {
        languageSettings.enableLanguageFeature('InlineClasses')
    }
}